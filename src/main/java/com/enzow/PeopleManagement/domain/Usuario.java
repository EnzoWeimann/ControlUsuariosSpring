package com.enzow.PeopleManagement.domain;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotEmpty;
import lombok.Data;
import java.util.List;

import java.io.Serializable;

/**
 * JPA entity that represent a User in the system
 * This class is mapped to the 'usuario' table in the MySQL DB
 * It includes autogenerated id, the user's username, password and assigned roles
 * It is serialized by the implementation of {@link Serializable}
 *
 * The {@link Data} Lombok annotation automatically generates the getters, setters, toString, equals and hashCode methods
 */
@Entity
@Data
@Table(name="usuario")
public class Usuario implements Serializable {

    /**
     * SerialVersionUID = 1L ensures that even a change in the class, java can still recognize and deserialize objects serialized with the previous version
     */
    private static final long serialVersionUID = 1L;

    /**
     * Unique identifier of a Persona Object automatically generated
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id_usuario;

    /**
     * Attribute 'username' = User's authentication name
     * Can't be empty
     */
    @NotEmpty
    private String username;

    /**
     * Attribute 'password' = User's authentication password, stored in DB in encrypted format
     * Can't be empty
     */
    @NotEmpty
    private String password;

    /**
     * List of roles assigned to the User. A user can have multiple roles.
     * This relationship is mapped by a foreign key in the 'rol' table, which points to 'id_usuario' in the 'usuario' table
     */
    @OneToMany
    @JoinColumn(name = "id_usuario")
    private List<Rol> roles;
}
